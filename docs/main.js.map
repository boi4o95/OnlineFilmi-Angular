{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/guards/admin.guard.ts","webpack:///./src/app/auth/guards/auth.guard.ts","webpack:///./src/app/auth/index.ts","webpack:///./src/app/auth/models/login.model.ts","webpack:///./src/app/auth/models/register.model.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/contacts/contact.service.ts","webpack:///./src/app/contacts/contact/contacts.component.css","webpack:///./src/app/contacts/contact/contacts.component.html","webpack:///./src/app/contacts/contact/contacts.component.ts","webpack:///./src/app/contacts/model/contact.model.ts","webpack:///./src/app/film/all-film/all-film.component.css","webpack:///./src/app/film/all-film/all-film.component.html","webpack:///./src/app/film/all-film/all-film.component.ts","webpack:///./src/app/film/create-film/create-film.component.css","webpack:///./src/app/film/create-film/create-film.component.html","webpack:///./src/app/film/create-film/create-film.component.ts","webpack:///./src/app/film/edit-film/edit-film.component.css","webpack:///./src/app/film/edit-film/edit-film.component.html","webpack:///./src/app/film/edit-film/edit-film.component.ts","webpack:///./src/app/film/film-details/film-details.component.css","webpack:///./src/app/film/film-details/film-details.component.html","webpack:///./src/app/film/film-details/film-details.component.ts","webpack:///./src/app/film/film-routing.module.ts","webpack:///./src/app/film/film.module.ts","webpack:///./src/app/film/film.service.ts","webpack:///./src/app/film/index.ts","webpack:///./src/app/film/models/create-film.models.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptors/error.interceptor.ts","webpack:///./src/app/interceptors/token.interceptor.ts","webpack:///./src/app/requestForFilms/create-request/create-request.component.css","webpack:///./src/app/requestForFilms/create-request/create-request.component.html","webpack:///./src/app/requestForFilms/create-request/create-request.component.ts","webpack:///./src/app/requestForFilms/index.ts","webpack:///./src/app/requestForFilms/models/createRequest.models.ts","webpack:///./src/app/requestForFilms/request-routing.module.ts","webpack:///./src/app/requestForFilms/request-table/request-table.component.css","webpack:///./src/app/requestForFilms/request-table/request-table.component.html","webpack:///./src/app/requestForFilms/request-table/request-table.component.ts","webpack:///./src/app/requestForFilms/request.module.ts","webpack:///./src/app/requestForFilms/request.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\r\nimport { Routes, RouterModule } from '@angular/router'\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ContactsComponent } from './contacts/contact/contacts.component';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { FilmModule } from './film/film.module';\r\nimport { RequestModule } from './requestForFilms/request.module';\r\n\r\n\r\n\r\nconst route : Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path:'auth', loadChildren: () => AuthModule },\r\n    { path: 'films', loadChildren: () => FilmModule },\r\n    { path: 'request', loadChildren: () => RequestModule },\r\n    { path: 'contact', component: ContactsComponent}\r\n]\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forRoot(route) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { ToastrModule } from 'ngx-toastr'\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { FilmModule } from './film/film.module';\r\nimport { RequestModule } from './requestForFilms/request.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { ContactsComponent } from './contacts/contact/contacts.component';\r\n\r\nimport { TokenInterceptor } from './interceptors/token.interceptor';\r\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    FooterComponent,\r\n    ContactsComponent\r\n  ],\r\n  imports: [\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    AuthModule,\r\n    FilmModule,\r\n    RequestModule\r\n  ],\r\n  providers: [ \r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    } ,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptor,\r\n      multi: true\r\n    } \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst authRoutes: Routes = [\r\n    { path: 'login', component: SigninComponent },\r\n    { path: 'register', component: SignupComponent }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(authRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core'\r\nimport { authComponents } from './index';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...authComponents\r\n    ],\r\n    imports: [\r\n        FormsModule,\r\n        AuthRoutingModule\r\n    ],\r\n    providers: [\r\n        AuthService\r\n    ]\r\n})\r\nexport class AuthModule { }","import { Injectable } from \"@angular/core\"\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\"\r\nimport { LoginModel } from \"./models/login.model\"\r\nimport { RegisterModel } from \"./models/register.model\"\r\n\r\nconst appKey = \"kid_B1GOKdwHX\" \r\nconst registerUrl = `https://baas.kinvey.com/user/${appKey}`\r\nconst loginUrl = `https://baas.kinvey.com/user/${appKey}/login`\r\nconst logoutUrl = `https://baas.kinvey.com/user/${appKey}/_logout`\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(private http : HttpClient) { }\r\n\r\n    login(model : LoginModel) {\r\n        return this.http.post(loginUrl, JSON.stringify(model))\r\n    }\r\n\r\n    register (model : RegisterModel) {\r\n        return this.http.post(registerUrl, JSON.stringify(model))\r\n    }\r\n\r\n    logout () {\r\n        return this.http.post(logoutUrl, {})\r\n    }\r\n\r\n    getUsername() {\r\n        return localStorage.getItem('username') \r\n    }\r\n\r\n\r\n    checkIfLoggedIn() {\r\n        return localStorage.getItem('authtoken') !== null\r\n    }\r\n\r\n  \r\n    checkIfAdmin() {\r\n        return localStorage.getItem('roles') !== null\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n  \r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    return this.check();\r\n  }\r\n\r\n  check() {\r\n    if (this.authService.checkIfAdmin()) {\r\n      return true\r\n    }\r\n\r\n    this.router.navigate(['/'])\r\n    return false\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    return this.check();\r\n  }\r\n\r\n  check() {\r\n    if (this.authService.checkIfLoggedIn()) {\r\n      return true\r\n    }\r\n\r\n    this.router.navigate(['/auth/login'])\r\n    return false\r\n  }\r\n}\r\n","import { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\n\r\nexport const authComponents = [\r\n    SigninComponent,\r\n    SignupComponent\r\n]","export class LoginModel {\r\n    constructor(\r\n        public username: string,\r\n        public password: string\r\n    ) { }\r\n}","export class RegisterModel {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public email: string,\r\n    ) { }\r\n}","module.exports = \"#row {\\r\\n    margin-top:50px;\\r\\n    margin-left: 30%;\\r\\n}\\r\\n\\r\\n.panel-body {\\r\\n    padding-top:30px;\\r\\n}\\r\\n\\r\\n#btn {\\r\\n    margin-top:10px;\\r\\n}\"","module.exports = \"<div id=\\\"row\\\">\\r\\n  <h1>Login</h1>\\r\\n  <div class=\\\"panel-body\\\">\\r\\n    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstname\\\" class=\\\"col-md-3 control-label\\\">Username</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\r\\n          [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required>\\r\\n          <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Username is required.\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstname\\\" class=\\\"col-md-3 control-label\\\">Password</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n          [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required>\\r\\n          <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Password is required.\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div id=\\\"btn\\\" class=\\\"col-sm-12 controls\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"loginForm.form.invalid\\\"  class=\\\"btn btn-success\\\">Login</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from '../models/login.model';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  model: LoginModel\r\n  loginFailed: boolean\r\n  errMessage: string\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n    this.model = new LoginModel('', '')\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe()\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#row {\\r\\n    margin-top:50px;\\r\\n    margin-left: 30%;\\r\\n}\\r\\n\\r\\n.panel-body {\\r\\n    padding-top:30px;\\r\\n}\\r\\n\\r\\n#btn {\\r\\n    margin-top:10px;\\r\\n}\"","module.exports = \"<div id=\\\"row\\\">\\r\\n  <h1>Register</h1>\\r\\n  <div class=\\\"panel-body\\\">\\r\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\" class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\" class=\\\"col-md-3 control-label\\\">Username</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\"\\r\\n            pattern=\\\"^[A-Za-z\\\\d]{4,16}$\\\" required>\\r\\n          <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Username must contain only letters and digits and must be between 4 and 16 symbols.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\" class=\\\"col-md-3 control-label\\\">Password</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passwd\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\r\\n            pattern=\\\"^[A-Za-z\\\\d]{4,16}$\\\" required>\\r\\n          <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Password must contain only letters and digits and must be between 4 and 16 symbols.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"confirmPassword\\\" class=\\\"col-md-3 control-label\\\">Confirm Password</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.confirmPassword\\\"\\r\\n            #confirmPassword=\\\"ngModel\\\" required>\\r\\n          <div [hidden]=\\\"password.value === confirmPassword.value || confirmPassword.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Password no match.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"col-md-3 control-label\\\">Email Address</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\"\\r\\n            email required>\\r\\n          <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Email address is invalid.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstName\\\" class=\\\"col-md-6 control-label\\\">First Name</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"model.firstName\\\" #firstName=\\\"ngModel\\\"\\r\\n            pattern=\\\"^[A-Z][A-Za-z]+$\\\" required>\\r\\n          <div [hidden]=\\\"firstName.valid|| firstName.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            First name must contain only letters and start with a capital letter.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"lastName\\\" class=\\\"col-md-6 control-label\\\">Last Name</label>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" pattern=\\\"^[A-Z][A-Za-z]+$\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\"\\r\\n            #lastName=\\\"ngModel\\\" required>\\r\\n          <div [hidden]=\\\"lastName.valid || lastName.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Last name must contain only letters and start with a capital letter.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div id=\\\"btn\\\" class=\\\"col-md-offset-3 col-md-9\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"registerForm.form.invalid\\\" >Register</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br> <br>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterModel } from '../models/register.model'\r\nimport { AuthService } from '../auth.service'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  model: RegisterModel\r\n  loginFailed: boolean\r\n  errMessage: string\r\n\r\n  constructor(private authService: AuthService, private router : Router) {\r\n    this.model = new RegisterModel('', '', '', '', '')\r\n  }\r\n\r\n  register() {\r\n    delete this.model['confirmPassword']\r\n    this.authService.register(this.model).subscribe()\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\"\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\"\r\nimport { ContactModel } from \"./model/contact.model\";\r\n\r\n\r\nconst contactUrl = \"https://api.emailjs.com/api/v1.0/email/send\"\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    post(model: ContactModel) {\r\n        var form = {\r\n            service_id: \"gmail\",\r\n            template_id: \"template_ivtT1ISk\",\r\n            user_id: \"user_GuwBPJ7ATUPSP7gSS97JS\",\r\n            template_params: {\r\n                email: model.email,\r\n                message: model.message\r\n            },\r\n        }\r\n\r\n        return this.http.post(contactUrl, form)\r\n    }\r\n}","module.exports = \"#row {\\r\\n    margin-top:50px;\\r\\n    margin-left: 30%;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#btn {\\r\\n    margin-top:10px;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\ninput, textarea {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid rgb(121, 36, 47);\\r\\n    border-right:  1px solid rgb(121, 36, 47);\\r\\n    border-left:  1px solid rgb(121, 36, 47);\\r\\n    border-top:  1px solid rgb(121, 36, 47);\\r\\n    text-align: center;\\r\\n    transition: 0.1s all ease-in-out;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#contact {\\r\\n    width: 60%;\\r\\n    margin: 0 auto;\\r\\n    -webkit-box-shadow: -11px 0 11px 0 #888888, 11px 2px 11px 0 #888888;\\r\\n    background: gainsboro;\\r\\n}\\r\\n\\r\\n#cont {\\r\\n    width: 143%;\\r\\n    height: 200px;\\r\\n    margin: 0 auto;\\r\\n    display: inline-block;\\r\\n    margin-left: -43%\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"contact\\\">\\r\\n    <section id=\\\"mainsection\\\">\\r\\n        <div id=\\\"row\\\">\\r\\n            <img id=\\\"cont\\\" src=\\\"../../assets/contacts.jpg\\\" alt=\\\"logo\\\">\\r\\n            <h1>Контакт с нас</h1>\\r\\n            <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"contact()\\\" class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <strong for=\\\"email\\\" class=\\\"col-md-10 control-label\\\">Ваш имейл адрес:</strong>\\r\\n                <div class=\\\"col-md-15\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"bindingModel.email\\\" \\r\\n                  #email=\\\"ngModel\\\" email required>\\r\\n                  <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Email address is invalid.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <strong for=\\\"message\\\" class=\\\"col-md-6 control-label\\\">Съобщение:</strong>\\r\\n                <div class=\\\"col-md-15\\\">\\r\\n                  <textarea class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"exampleTextarea\\\" rows=\\\"8\\\" name=\\\"message\\\" \\r\\n                  [(ngModel)]=\\\"bindingModel.message\\\" #message=\\\"ngModel\\\" required>\\r\\n                  </textarea>\\r\\n                  <div [hidden]=\\\"message.valid || message.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Message is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div id=\\\"btn\\\" class=\\\"col-md-offset-3 col-md-9\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"contactForm.form.invalid\\\" >изпрати</button>\\r\\n              </div>\\r\\n              <br> \\r\\n            </form>\\r\\n          </div>\\r\\n    </section>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ContactModel } from '../model/contact.model';\r\nimport { ContactService } from '../contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n  bindingModel : ContactModel\r\n  \r\n  constructor(private contactService : ContactService) { \r\n    this.bindingModel = new ContactModel ('', '')\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  contact() {\r\n    this.contactService.post(this.bindingModel).subscribe()\r\n  }\r\n}\r\n","export class ContactModel {\r\n    constructor(\r\n        public email: string,\r\n        public message: string\r\n    ) { }\r\n}","module.exports = \".row {\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n.title { \\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.pagination {\\r\\n    padding-left: 30%;\\r\\n    background-color: #717070;\\r\\n}\"","module.exports = \"<div class=\\\"films\\\">\\r\\n  <h3 class=\\\"title\\\">Всички филми</h3>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let f of films | async | paginate : {\\r\\n      id: 'all-film',\\r\\n      itemsPerPage: pageSize,\\r\\n      currentPage: currentPage\\r\\n    }\\\" class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card border-info mb-3\\\" style=\\\"max-width: 20rem;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <img class=\\\"card-img-top\\\" src=\\\"{{f.imageUrl}}\\\" alt=\\\"Card image\\\">\\r\\n        </div>\\r\\n        <div class=\\\"card-header\\\" style=\\\"text-align: center; height: 100px;\\\">{{f.title}}</div>\\r\\n        <br>\\r\\n        <p class=\\\"component\\\">\\r\\n          <a (click)=\\\"delete(f._id)\\\" *ngIf=\\\"authService.checkIfAdmin()\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 60px;\\\">delete</a>\\r\\n          <a routerLink=\\\"/films/edit/{{f._id}}\\\" *ngIf=\\\"authService.checkIfAdmin()\\\" class=\\\"btn btn-warning\\\" style=\\\"margin: 5px;\\\">edit</a>\\r\\n        </p>\\r\\n        <a routerLink=\\\"/films/details/{{f._id}}\\\" class=\\\"btn btn-primary\\\">View Film</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"pagination\\\">\\r\\n    <pagination-controls \\r\\n      id=\\\"all-film\\\" \\r\\n      (pageChange)=\\\"pageChanged($event)\\\" \\r\\n      maxSize=\\\"9\\\"\\r\\n      directionLinks=\\\"true\\\" \\r\\n      autoHide=\\\"true\\\" \\r\\n      responsive=\\\"true\\\"\\r\\n      previousLabel=\\\"Previous\\\" \\r\\n      nextLabel=\\\"Next\\\" \\r\\n      screenReaderPaginationLabel=\\\"Pagination\\\" \\r\\n      screenReaderPageLabel=\\\"page\\\" \\r\\n      screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n    </pagination-controls>\\r\\n  </div>\\r\\n  <br> <br>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FilmService } from '../film.service';\r\nimport { FilmModel } from '../models/film.model';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-all-film',\r\n  templateUrl: './all-film.component.html',\r\n  styleUrls: ['./all-film.component.css']\r\n})\r\nexport class AllFilmComponent implements OnInit {\r\n  films :  Observable<FilmModel[]>\r\n  pageSize : number = 8\r\n  currentPage : number = 1\r\n\r\n  constructor(private filmService : FilmService, private authService : AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.films = this.filmService.getAllFilm()\r\n  }\r\n\r\n  pageChanged(page) {\r\n    this.currentPage = page\r\n  }\r\n\r\n  delete(_id : string) {\r\n    this.filmService.deleteFilm(_id).subscribe()\r\n  }\r\n}\r\n","module.exports = \".row { \\r\\n    text-align: center;\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row space-top\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h1 class=\\\"row\\\">Create New Film</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<form (ngSubmit)=\\\"create()\\\" #filmForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"row space-top\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-title\\\">Title</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"new-title\\\" type=\\\"text\\\" required #title=\\\"ngModel\\\"\\r\\n        name=\\\"title\\\" [(ngModel)]=\\\"bindingModel.title\\\">\\r\\n        <div [hidden]=\\\"title.valid|| title.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Title is required.\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-imageUrl\\\">Image Url</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"new-imageUrl\\\" type=\\\"text\\\" required #imageUrl=\\\"ngModel\\\" \\r\\n        name=\\\"imageUrl\\\" [(ngModel)]=\\\"bindingModel.imageUrl\\\">\\r\\n        <div [hidden]=\\\"imageUrl.valid|| imageUrl.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Image url is requred.\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group has-success\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-filmUrl\\\">Film Url</label>\\r\\n        <input class=\\\"form-control is-valid\\\" id=\\\"new-filmUrl\\\" type=\\\"text\\\" required #filmUrl=\\\"ngModel\\\" \\r\\n        name=\\\"filmUrl\\\" [(ngModel)]=\\\"bindingModel.filmUrl\\\">\\r\\n        <div [hidden]=\\\"filmUrl.valid|| filmUrl.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Film url is requred.\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group has-danger\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-year\\\">Year</label>\\r\\n        <input class=\\\"form-control is-invalid\\\" id=\\\"new-year\\\" type=\\\"number\\\" required #year=\\\"ngModel\\\" \\r\\n        name=\\\"year\\\" [(ngModel)]=\\\"bindingModel.year\\\" [min]=\\\"1950\\\" [max]=\\\"2050\\\">\\r\\n        <div [hidden]=\\\"year.valid|| year.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          Year must be between 1950 and 2050.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-genre\\\">Genre</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"new-genre\\\" type=\\\"text\\\" required #genre=\\\"ngModel\\\" \\r\\n        name=\\\"genre\\\" [(ngModel)]=\\\"bindingModel.genre\\\">\\r\\n          <option></option>\\r\\n          <option value=\\\"action\\\">action</option>\\r\\n          <option value=\\\"comedy\\\">comedy</option>\\r\\n          <option value=\\\"animation\\\">animation</option>\\r\\n          <option value=\\\"drama\\\">drama</option>\\r\\n        </select>\\r\\n        <div [hidden]=\\\"genre.valid|| genre.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          Genre is requred.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-control-label\\\" for=\\\"new-description\\\">Description</label>\\r\\n        <textarea class=\\\"form-control\\\" id=\\\"new-description\\\" rows=\\\"3\\\" style=\\\"margin-top: 0px; margin-bottom: 0px; height: 95px;\\\" type=\\\"text\\\"\\r\\n          required #description=\\\"ngModel\\\" name=\\\"description\\\" [(ngModel)]=\\\"bindingModel.description\\\"></textarea>\\r\\n        <div [hidden]=\\\"description.valid|| description.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          Description is requred.\\r\\n        </div>\\r\\n      </div>\\r\\n      <input type=\\\"submit\\\"  class=\\\"btn btn-primary\\\" [disabled]=\\\"filmForm.form.invalid\\\" value=\\\"Create\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreateFilmModel } from '../models/create-film.models';\r\nimport { FilmService } from '../film.service';\r\n\r\n@Component({\r\n  selector: 'app-create-film',\r\n  templateUrl: './create-film.component.html',\r\n  styleUrls: ['./create-film.component.css']\r\n})\r\nexport class CreateFilmComponent implements OnInit {\r\n  bindingModel : CreateFilmModel\r\n\r\n  constructor(private filmService : FilmService) { \r\n    this.bindingModel = new CreateFilmModel('', '', '', 0, '', '')\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  create() {\r\n    this.filmService.createFilm(this.bindingModel).subscribe()\r\n  }\r\n\r\n}\r\n","module.exports = \".row { \\r\\n    text-align: center;\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\"","module.exports = \"{{model | json}}\\r\\n<div *ngIf=\\\"bindingModel\\\">\\r\\n  <div class=\\\"row space-top\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h1 class=\\\"row\\\">Edit Film</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form (ngSubmit)=\\\"edit()\\\" #editForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"row space-top\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-title\\\">Title</label>\\r\\n          <input class=\\\"form-control\\\" id=\\\"new-title\\\" type=\\\"text\\\" required #title=\\\"ngModel\\\"\\r\\n          name=\\\"title\\\" [(ngModel)]=\\\"bindingModel.title\\\">\\r\\n          <div [hidden]=\\\"title.valid|| title.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Title is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-imageUrl\\\">Image Url</label>\\r\\n          <input class=\\\"form-control\\\" id=\\\"new-imageUrl\\\" type=\\\"text\\\" required #imageUrl=\\\"ngModel\\\" \\r\\n          name=\\\"imageUrl\\\" [(ngModel)]=\\\"bindingModel.imageUrl\\\">\\r\\n          <div [hidden]=\\\"imageUrl.valid|| imageUrl.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Image url is requred.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group has-success\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-filmUrl\\\">Film Url</label>\\r\\n          <input class=\\\"form-control is-valid\\\" id=\\\"new-filmUrl\\\" type=\\\"text\\\" required #filmUrl=\\\"ngModel\\\" \\r\\n          name=\\\"filmUrl\\\" [(ngModel)]=\\\"bindingModel.filmUrl\\\">\\r\\n          <div [hidden]=\\\"filmUrl.valid|| filmUrl.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n              Film url is requred.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group has-danger\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-year\\\">Year</label>\\r\\n          <input class=\\\"form-control is-invalid\\\" id=\\\"new-year\\\" type=\\\"number\\\" required #year=\\\"ngModel\\\" \\r\\n          name=\\\"year\\\" [(ngModel)]=\\\"bindingModel.year\\\" [min]=\\\"1950\\\" [max]=\\\"2050\\\">\\r\\n          <div [hidden]=\\\"year.valid|| year.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Year must be between 1950 and 2050.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-genre\\\">Genre</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"new-genre\\\" type=\\\"text\\\" required #genre=\\\"ngModel\\\" \\r\\n          name=\\\"genre\\\" [(ngModel)]=\\\"bindingModel.genre\\\">\\r\\n            <option></option>\\r\\n            <option value=\\\"action\\\">action</option>\\r\\n            <option value=\\\"comedy\\\">comedy</option>\\r\\n            <option value=\\\"animation\\\">animation</option>\\r\\n            <option value=\\\"drama\\\">drama</option>\\r\\n          </select>\\r\\n          <div [hidden]=\\\"genre.valid|| genre.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Genre is requred.\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-control-label\\\" for=\\\"new-description\\\">Description</label>\\r\\n          <textarea class=\\\"form-control\\\" id=\\\"new-description\\\" rows=\\\"3\\\" style=\\\"margin-top: 0px; margin-bottom: 0px; height: 95px;\\\" type=\\\"text\\\"\\r\\n            required #description=\\\"ngModel\\\" name=\\\"description\\\" [(ngModel)]=\\\"bindingModel.description\\\"></textarea>\\r\\n          <div [hidden]=\\\"description.valid|| description.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n            Description is requred.\\r\\n          </div>\\r\\n        </div>\\r\\n        <input type=\\\"submit\\\"  class=\\\"btn btn-primary\\\" [disabled]=\\\"editForm.form.invalid\\\" value=\\\"submit\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreateFilmModel } from '../models/create-film.models';\r\nimport { FilmService } from '../film.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-film',\r\n  templateUrl: './edit-film.component.html',\r\n  styleUrls: ['./edit-film.component.css']\r\n})\r\nexport class EditFilmComponent implements OnInit {\r\n  _id : string\r\n  bindingModel :CreateFilmModel\r\n\r\n  constructor(private filmService : FilmService, private route : ActivatedRoute) {\r\n    this._id = this.route.snapshot.params['_id']\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filmService.getFilmById(this._id).subscribe((data) => {\r\n      this.bindingModel = data\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.filmService.editFilm(this._id, this.bindingModel).subscribe()\r\n  }\r\n  \r\n}\r\n","module.exports = \".content {\\r\\n    width: 100%;\\r\\n    padding: 20px;\\r\\n    overflow: hidden;\\r\\n   \\r\\n}\\r\\n\\r\\n.content img {\\r\\n    width: 500px;\\r\\n    height: 800px;\\r\\n    margin-right: 15px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n#videocontainer iframe {\\r\\n    width: 800px;\\r\\n    height: 500px;\\r\\n    margin-left: 15%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"film\\\" *ngIf=\\\"film | async as f\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <img src=\\\"{{f.imageUrl}}\\\" alt=\\\"\\\" />\\r\\n    <h3>{{f.title}}</h3>\\r\\n    <h5>Годига: {{f.year}}</h5>\\r\\n    <br>\\r\\n    <p>\\r\\n     {{f.description}}\\r\\n    </p>\\r\\n    <br>\\r\\n    <span>Жанр: {{f.genre}}</span>\\r\\n  </div>\\r\\n  <div id=\\\"videocontainer\\\">\\r\\n      <iframe [src]=\\\"f.filmUrl | safe: 'resourceUrl'\\\" width=\\\"100%\\\" height=\\\"100%\\\" border=\\\"0\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\"\\r\\n      allowfullscreen=\\\"\\\" webkitallowfullscreen=\\\"\\\" mozallowfullscreen=\\\"\\\" oallowfullscreen=\\\"\\\" msallowfullscreen=\\\"\\\"></iframe>\\r\\n  </div>\\r\\n  <br> <br>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FilmModel } from '../models/film.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FilmService } from '../film.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-film-details',\r\n  templateUrl: './film-details.component.html',\r\n  styleUrls: ['./film-details.component.css']\r\n})\r\nexport class FilmDetailsComponent implements OnInit {\r\n  film : Observable<FilmModel>\r\n  _id : string\r\n\r\n  constructor(\r\n    private route : ActivatedRoute, \r\n    private filmService : FilmService\r\n   ) { \r\n    this._id = this.route.snapshot.params['_id']\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.film = this.filmService.getFilmById(this._id)\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { AuthGuard } from '../auth/guards/auth.guard';\r\nimport { AdminGuard } from '../auth/guards/admin.guard';\r\nimport { AllFilmComponent } from './all-film/all-film.component';\r\nimport { FilmDetailsComponent } from './film-details/film-details.component';\r\nimport { CreateFilmComponent } from './create-film/create-film.component';\r\nimport { EditFilmComponent } from './edit-film/edit-film.component';\r\n\r\nconst filmRoutes: Routes = [\r\n    { path: '', component: AllFilmComponent, canActivate: [AuthGuard] },\r\n    { path: 'details/:_id', component: FilmDetailsComponent, canActivate: [AuthGuard] },\r\n    { path: 'create', component: CreateFilmComponent, canActivate: [AdminGuard] },\r\n    { path: 'edit/:_id', component: EditFilmComponent, canActivate: [AdminGuard] }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(filmRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class FilmRoutingModule { }\r\n","import { NgModule } from '@angular/core'\r\nimport { filmComponet } from './index';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FilmService } from './film.service';\r\nimport { SafePipeModule } from 'safe-pipe';\r\nimport { FilmRoutingModule } from './film-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxPaginationModule } from 'ngx-pagination'\r\nimport { CustomFormsModule } from 'ng2-validation';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...filmComponet\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        NgxPaginationModule,\r\n        FormsModule,\r\n        FilmRoutingModule,\r\n        SafePipeModule,\r\n        CustomFormsModule\r\n    ],\r\n    providers: [\r\n        FilmService\r\n    ]\r\n})\r\nexport class FilmModule { }","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { CreateFilmModel } from './models/create-film.models';\r\nimport { FilmModel } from './models/film.model';\r\n\r\nconst appKey = \"kid_B1GOKdwHX\"\r\nconst filmsUrl = `https://baas.kinvey.com/appdata/${appKey}/films`\r\n\r\n@Injectable()\r\nexport class FilmService { \r\n    constructor(private http : HttpClient) { }\r\n\r\n    createFilm(body : CreateFilmModel) {\r\n        return this.http.post(filmsUrl, body)\r\n    }\r\n\r\n    getAllFilm() {\r\n        return this.http.get<FilmModel[]>(filmsUrl)\r\n    }\r\n\r\n    getFilmById(_id : string) {\r\n        return this.http.get<FilmModel>(filmsUrl + `/${_id}`)\r\n    }\r\n\r\n    deleteFilm(_id : string) {\r\n        return this.http.delete(filmsUrl + `/${_id}`)\r\n    }\r\n\r\n    editFilm(_id : string, body) {\r\n        return this.http.put(filmsUrl + `/${_id}`, body)\r\n    }\r\n}","import { AllFilmComponent } from \"./all-film/all-film.component\";\r\nimport { CreateFilmComponent } from \"./create-film/create-film.component\";\r\nimport { FilmDetailsComponent } from \"./film-details/film-details.component\";\r\nimport { EditFilmComponent } from \"./edit-film/edit-film.component\";\r\n\r\n\r\nexport const filmComponet = [\r\n    AllFilmComponent,\r\n    CreateFilmComponent,\r\n    FilmDetailsComponent,        \r\n    EditFilmComponent\r\n]","export class CreateFilmModel {\r\n    constructor(\r\n        public title : string,\r\n        public imageUrl : string,\r\n        public filmUrl : string,\r\n        public year : number,\r\n        public genre : string,\r\n        public description : string\r\n    ) { }\r\n}","module.exports = \"footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    background-color: rgba(255, 255, 255, 0.767);\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<footer>\\r\\n  <span> Ако сте носител на авторско право и желаете премахването на филм от сайта свържете се с нас чрез формата за контакт . </span>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#addFilm {\\r\\n    background: red;\\r\\n    border: 4px solid red;\\r\\n    border-radius: 60px;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\">Online Filmi</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n    <ul class=\\\"navbar-nav \\\">\\r\\n      <li class=\\\"nav-item \\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Начало\\r\\n          <span class=\\\"sr-only\\\">(current)</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item \\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/films\\\">Филми </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"authService.checkIfLoggedIn()\\\" >\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/request/create\\\" *ngIf=\\\"!authService.checkIfAdmin()\\\">Предложи филм </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"authService.checkIfAdmin()\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/request/list\\\">Предложени филми </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item \\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/contact\\\">Контакт </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"authService.checkIfAdmin()\\\">\\r\\n          <a class=\\\"nav-link\\\" id=\\\"addFilm\\\" routerLink=\\\"/films/create\\\" >add film</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.checkIfLoggedIn()\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/auth/login\\\">Login</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.checkIfLoggedIn()\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/auth/register\\\">Register</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.checkIfLoggedIn()\\\">\\r\\n        <strong class=\\\"nav-link\\\">Hello, {{authService.getUsername()}}</strong>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\"  *ngIf=\\\"authService.checkIfLoggedIn()\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private authService : AuthService, private router : Router, private toastr : ToastrService) { }\r\n\r\n  logout(){\r\n    this.authService.logout().subscribe(\r\n      data => {\r\n        localStorage.clear()\r\n        this.toastr.success(\"Logout successful.\", \"Success!\")\r\n        this.router.navigate(['/auth/login'])\r\n      }\r\n    )\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".title { \\r\\n    text-align: center;\\r\\n    color: red;\\r\\n    margin-top: 80px;\\r\\n}\\r\\n\\r\\n.text {\\r\\n    margin-top: 130px;\\r\\n}\"","module.exports = \"<div id=\\\"row\\\">\\r\\n  <h3 class=\\\"title\\\">НАЙ-ДОБРИТЕ ФИЛМИ ОНЛАЙН</h3>\\r\\n  <br>\\r\\n  <p class=\\\"text\\\">\\r\\n    За да гледате Филми онлайн е нужна регистрация напълно безплатна. \\r\\n    За всеки филм онлайн можете да прочетете кратко описание, снимки към филма както и негов трейлър. \\r\\n    Сайта предлага всички удобства за да може гледането на филми онлайн да се превърне в истинско удоволствие.\\r\\n    Ако търсите къде да гледате своите любими екшъни, комедии, фентъзи, сериали и много други жанрове или \\r\\n    просто да убиете малко от свободното си време филми онлайн е точното място за вас. \\r\\n    Богатата колекция от филми онлайн съдържа по нещо за всеки фен на киното и филмите. \\r\\n    Желаем ви приятно гледане!\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { HttpResponse, HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable, throwError } from 'rxjs'\r\nimport { tap, catchError } from 'rxjs/operators'\r\nimport { ToastrService } from 'ngx-toastr'\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor (private toastr : ToastrService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(catchError((err : HttpErrorResponse) => {\r\n            err.error.errors\r\n            switch(err.status){\r\n                case 401:\r\n                let message = err.error.description\r\n                this.toastr.error(message, \"Warning!\")\r\n                break;\r\n                case 409:\r\n                let error = err.error.description\r\n                this.toastr.error(error, \"Warning!\")\r\n                break;\r\n            }\r\n\r\n            return throwError(err)\r\n        }))\r\n    }\r\n\r\n}","import { HttpResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { tap } from 'rxjs/operators'\r\nimport { ToastrService } from 'ngx-toastr'\r\nimport { Router } from '@angular/router'\r\n\r\nconst appKey = \"kid_B1GOKdwHX\"\r\nconst appSecret = \"e677edfbd0344735b9e0f3731f1ae0ec\"\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(private toastr: ToastrService, private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (req.url.endsWith('login') || req.url.endsWith(appKey)) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Basic ${btoa(`${appKey}:${appSecret}`)}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n        } else {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Kinvey ${localStorage.getItem('authtoken')}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n        }\r\n\r\n        return next.handle(req)\r\n            .pipe(tap((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse && req.url.endsWith('login')) {\r\n                    this.successfulLogin(event['body'])\r\n                    this.toastr.success(\"Login successful.\", \"Success!\")\r\n                }\r\n\r\n                if (event instanceof HttpResponse && req.url.endsWith(appKey)) {\r\n                    this.toastr.success(\"Register successful.\", \"Success!\")\r\n                    this.router.navigate(['/auth/login'])\r\n                }\r\n\r\n                if (event instanceof HttpResponse && req.url.endsWith('films') && req.method.endsWith('POST')) {\r\n                    this.toastr.success(\"Create film success.\", \"Success!\")\r\n                    this.router.navigate(['/films'])\r\n                }\r\n\r\n                if (event instanceof HttpResponse && req.method.endsWith('DELETE')) {\r\n                    this.toastr.success(\"Delete success.\", \"Success!\")\r\n                    this.router.navigate(['/'])\r\n                }\r\n                \r\n                if (event instanceof HttpResponse && req.method.endsWith('PUT')) {\r\n                    this.toastr.success(\"Edit film success.\", \"Success!\")\r\n                    this.router.navigate(['/films'])\r\n                }\r\n                if (event instanceof HttpResponse && req.url.endsWith('request') && req.method.endsWith('POST')) {\r\n                    this.toastr.success(\"Success.\", \"Success!\")\r\n                    this.router.navigate(['/films'])\r\n                }\r\n\r\n                if(req.url === 'https://api.emailjs.com/api/v1.0/email/send'){\r\n                    this.toastr.success(\"Send email successful.\", \"Success!\")\r\n                    this.router.navigate(['/'])\r\n                }\r\n            }))\r\n    }\r\n\r\n    private successfulLogin(data) {\r\n        localStorage.setItem('authtoken', data._kmd.authtoken)\r\n        localStorage.setItem('username', data.username)\r\n\r\n        if (data._kmd.roles){\r\n            localStorage.setItem('roles', data._kmd.roles)\r\n        }\r\n\r\n        this.router.navigate(['/films'])\r\n    }\r\n\r\n}","module.exports = \"#row {\\r\\n    margin-top:50px;\\r\\n    margin-left: 30%;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#btn {\\r\\n    margin-top:10px;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid rgb(121, 36, 47);\\r\\n    border-right:  1px solid rgb(121, 36, 47);\\r\\n    border-left:  1px solid rgb(121, 36, 47);\\r\\n    border-top:  1px solid rgb(121, 36, 47);\\r\\n    text-align: center;\\r\\n    transition: 0.1s all ease-in-out;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#container {\\r\\n    width: 60%;\\r\\n    margin: 0 auto;\\r\\n    -webkit-box-shadow: -11px 0 11px 0 #888888, 11px 2px 11px 0 #888888;\\r\\n    background: gainsboro;\\r\\n}\\r\\n\\r\\n#cont {\\r\\n    width: 143%;\\r\\n    height: 200px;\\r\\n    margin: 0 auto;\\r\\n    display: inline-block;\\r\\n    margin-left: -43%\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"container\\\">\\r\\n  <section id=\\\"mainsection\\\">\\r\\n      <div id=\\\"row\\\">\\r\\n          <strong>Тук можете да предложите филми, които да качим. :)</strong>\\r\\n          <br> <br>\\r\\n          <form #requestForm=\\\"ngForm\\\" (ngSubmit)=\\\"createRequest()\\\" class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <strong for=\\\"title\\\" class=\\\"col-md-10 control-label\\\">Заглавие на филма:</strong>\\r\\n              <div class=\\\"col-md-15\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"bindingModel.title\\\" \\r\\n                #title=\\\"ngModel\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <strong for=\\\"imageUrl\\\" class=\\\"col-md-6 control-label\\\">Url картинка на филма:</strong>\\r\\n              <div class=\\\"col-md-15\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"imageUrl\\\" [(ngModel)]=\\\"bindingModel.imageUrl\\\" \\r\\n                #imageUrl=\\\"ngModel\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <strong for=\\\"year\\\" class=\\\"col-md-10 control-label\\\">Година на филма:</strong>\\r\\n              <div class=\\\"col-md-15\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" [(ngModel)]=\\\"bindingModel.year\\\" \\r\\n                #year=\\\"ngModel\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <strong for=\\\"genre\\\" class=\\\"col-md-6 control-label\\\">Жанр на филма:</strong>\\r\\n              <div class=\\\"col-md-15\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"genre\\\" [(ngModel)]=\\\"bindingModel.genre\\\" \\r\\n                #genre=\\\"ngModel\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div id=\\\"btn\\\" class=\\\"col-md-offset-3 col-md-9\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">изпрати</button>\\r\\n            </div>\\r\\n            <br> \\r\\n          </form>\\r\\n        </div>\\r\\n  </section>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreateRequestModel } from '../models/createRequest.models';\r\nimport { RequestService } from '../request.service';\r\n\r\n@Component({\r\n  selector: 'app-create-request',\r\n  templateUrl: './create-request.component.html',\r\n  styleUrls: ['./create-request.component.css']\r\n})\r\nexport class CreateRequestComponent implements OnInit {\r\n  bindingModel : CreateRequestModel\r\n  constructor(private requestService : RequestService ) { \r\n    this.bindingModel = new CreateRequestModel('', '', 0, '')\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createRequest() {\r\n    this.requestService.createRequest(this.bindingModel).subscribe()\r\n  }\r\n\r\n}\r\n","import { CreateRequestComponent } from \"./create-request/create-request.component\";\r\nimport { RequestTableComponent } from \"./request-table/request-table.component\";\r\n\r\nexport const requestForFilms = [\r\n    CreateRequestComponent,\r\n    RequestTableComponent\r\n]","export class CreateRequestModel {\r\n    constructor(\r\n        public title : string,\r\n        public imageUrl : string,\r\n        public year : number,\r\n        public genre : string\r\n    ) { }\r\n}","import { NgModule } from '@angular/core'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { AuthGuard } from '../auth/guards/auth.guard';\r\nimport { AdminGuard } from '../auth/guards/admin.guard';\r\nimport { CreateRequestComponent } from './create-request/create-request.component';\r\nimport { RequestTableComponent } from './request-table/request-table.component';\r\n\r\nconst requestRoutes: Routes = [\r\n    { path: 'create', component: CreateRequestComponent, canActivate: [AuthGuard] },\r\n    { path: 'list', component: RequestTableComponent, canActivate: [AdminGuard] }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(requestRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class RequestRoutingModule { }\r\n","module.exports = \"#row {\\r\\n    margin-top:80px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n}\"","module.exports = \"<div id=\\\"row\\\">\\r\\n  <table class=\\\"table table-info\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"table-danger\\\">\\r\\n        <th scope=\\\"col\\\">Image Url</th>\\r\\n        <th scope=\\\"col\\\">Title</th>\\r\\n        <th scope=\\\"col\\\">Year</th>\\r\\n        <th scope=\\\"col\\\">Genre</th>\\r\\n        <th scope=\\\"col\\\">Delete</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody *ngFor=\\\"let t of table | async\\\">\\r\\n      <tr class=\\\"table-dark\\\">\\r\\n        <th scope=\\\"col\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"{{t.imageUrl}}\\\" alt=\\\"Card image\\\">\\r\\n        </th>\\r\\n        <td>{{t.title}}</td>\\r\\n        <td>{{t.year}}</td>\\r\\n        <td>{{t.genere}}</td>\\r\\n        <td>\\r\\n          <a (click)=\\\"delete(t._id)\\\" class=\\\"btn btn-success\\\">delete</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <br>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RequestService } from '../request.service';\r\nimport { TableRequestModel } from '../models/tableRequest.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-request-table',\r\n  templateUrl: './request-table.component.html',\r\n  styleUrls: ['./request-table.component.css']\r\n})\r\nexport class RequestTableComponent implements OnInit {\r\n  table :  Observable<TableRequestModel[]>\r\n\r\n  constructor(private requestService : RequestService) { }\r\n\r\n  ngOnInit() {\r\n    this.table = this.requestService.getAll()\r\n  }\r\n  \r\n  delete(_id : string) {\r\n    this.requestService.deleteFilm(_id).subscribe()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { requestForFilms } from './index';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RequestService } from './request.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RequestRoutingModule } from './request-routing.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...requestForFilms\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        RequestRoutingModule\r\n    ],\r\n    providers: [\r\n        RequestService\r\n    ]\r\n})\r\nexport class RequestModule { }","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { TableRequestModel } from './models/tableRequest.model';\r\n\r\n\r\nconst appKey = \"kid_B1GOKdwHX\"\r\nconst url = `https://baas.kinvey.com/appdata/${appKey}/request`\r\n\r\n@Injectable()\r\nexport class RequestService { \r\n    constructor(private http : HttpClient) { }\r\n\r\n    createRequest(body) {\r\n        return this.http.post(url, body)\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<TableRequestModel[]>(url)\r\n    }\r\n\r\n    \r\n    deleteFilm(_id : string) {\r\n        return this.http.delete(url + `/${_id}`)\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}